name: CI

on:
  push:
    branches:
      - main
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'

jobs:
  # Build the project for all platforms
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
          cache-dependency-path: '**/*.sum'

      - name: Build
        run: CGO_ENABLED=0 go build -v -ldflags="-s -w"
        shell: bash

      # - name: Setup UPX
      #   shell: bash
      #   run: |
      #     if [ "${{ runner.os }}" == "Linux" ]; then
      #       sudo apt install upx -y
      #     elif [ "${{ runner.os }}" == "macOS" ]; then
      #       brew install upx
      #     else
      #       choco install upx
      #     fi

      # - name: Pack with UPX
      #   shell: bash
      #   run: |
      #     if [[ "${{ runner.os }}" == "Windows" ]]; then
      #       BINARY_NAME="github.com/algo7/tf2_rcon_misc.exe"
      #     else
      #       BINARY_NAME="github.com/algo7/tf2_rcon_misc"
      #     fi

      #     echo "Original Size=$(ls -lah | grep $BINARY_NAME | awk '{print $5}')"
      #     upx --best -o packed_binary $BINARY_NAME
      #     mv packed_binary $BINARY_NAME
      #     echo "Packed Size=$(ls -lah | grep $BINARY_NAME | awk '{print $5}')"

  # Run tests for all platforms after build is successful
  # test:
  #   needs: build
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.20

  #     - name: Test
  #       run: go test -v ./...
  #       shell: bash
